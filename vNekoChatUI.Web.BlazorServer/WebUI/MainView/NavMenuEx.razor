@using System.Diagnostics;
@using vNekoChatUI.Web.BlazorServer.WebUI.CustomControl

@inject IJSRuntime JS

<div class="nav-box">
    <nav class="nav">
        <a href="/" @onclick="NavOn">Home</a>
        @*        <a href="/" @onclick="NavOff">ChatRoom</a> *@
        <div class="animation start-home"></div>
    </nav>

    @if (ChatRoomModelInstance.ChatHistory.Count() > 0)
    {
        <div class="centered-content">
            <div class="info-container">
                <span>[@ChatRoomModelInstance.ChatHistory.Count()][cd:@ChatRoomModelInstance.AiCountdown]</span>
                <span>[tk:@ChatRoomModelInstance.AiTokenPrice]</span>
            </div>
        </div>
    }

    <div style="display: flex; margin: 5px 5px 5px 5px;">
        <SquareButton OnClick="scrollToTop" ExColor="blue"
                      PathData="M256 74.666667a53.333333 53.333333 0 1 0 0 106.666666h512a53.333333 53.333333 0 1 0 0-106.666666H256zM549.717333 260.949333a53.333333 53.333333 0 0 0-75.434666 0l-256 256a53.333333 53.333333 0 0 0 75.434666 75.434667l165.12-165.12V896a53.333333 53.333333 0 1 0 106.666667 0V427.605333l164.778667 164.778667a53.333333 53.333333 0 0 0 75.434666-75.434667l-256-256z"
                      Width="40" Height="40" />

    </div>
    <div style="display: flex; margin: 5px 5px 5px 0px;">
        <SquareButton OnClick="scrollToBottom" ExColor="blue"
                      PathData="M256 949.333333a53.333333 53.333333 0 1 1 0-106.666666h512a53.333333 53.333333 0 1 1 0 106.666666H256zM549.717333 763.050667a53.333333 53.333333 0 0 1-75.434666 0l-256-256a53.333333 53.333333 0 0 1 75.434666-75.434667l165.12 165.12V128a53.333333 53.333333 0 1 1 106.666667 0v468.394667l164.778667-164.778667a53.333333 53.333333 0 0 1 75.434666 75.434667l-256 256z"
                      Width="40" Height="40" />

    </div>
</div>

@code {
    private async Task ReRender() => await InvokeAsync(StateHasChanged);//重绘

    protected override async Task OnInitializedAsync()
    {
        MessageServiceInstance.OnNavMenuUpdated += async () =>
        {
            await ReRender(); // 刷新组件
        };

        await base.OnInitializedAsync();
    }

    private void NavOn()
    {
        NavManager.NavigateTo("/chatroom?NavigationOff=false", forceLoad: true);
    }

    private void NavOff()
    {
        NavManager.NavigateTo("/chatroom?NavigationOff=true", forceLoad: true);
    }

    private void scrollToTop()
    {
        try
        {
            _ = JS.InvokeVoidAsync("scrollToTop");
        }
        catch (Exception ex)
        {
            Debug.WriteLine($"scrollToTop error: {ex.Message}");
        }
    }
    private void scrollToBottom()
    {
        try
        {
            _ = JS.InvokeVoidAsync("scrollToBottom");
        }
        catch (Exception ex)
        {
            Debug.WriteLine($"scrollToBottom error: {ex.Message}");
        }
    }
}
