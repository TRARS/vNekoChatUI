<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:vNekoChatUI.CustomControlEx.SuggestionMenuItemEx"
                    xmlns:emptybuttonex="clr-namespace:vNekoChatUI.CustomControlEx.EmptyButtonEx">
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    
    <Style TargetType="ListBoxItem" x:Key="SuggestionItem" >
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <emptybuttonex:cEmptyButton BorderBackgroundOpacity="1"
                                                    BorderBackgroundZeroColor="#092E36"
                                                    BorderMouseOverColor="#00BEFF"
                                                    Command="{Binding SelectSuggestionCommand,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type local:cSuggestionMenuItem}}}"
                                                    CommandParameter="{Binding Content, 
                                                                               RelativeSource={RelativeSource TemplatedParent}}"/>
                        <TextBlock Grid.Column="0"
                                   Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                   Foreground="White"
                                   VerticalAlignment="Center"
                                   Margin="6,2,6,2"
                                   IsHitTestVisible="False"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:cSuggestionMenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cSuggestionMenuItem}">
                    <Border x:Name="border"
                            CornerRadius="2.5"
                            Background="{Binding BackgroundColor, RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--// Menu Text //-->
                            <ContentPresenter ContentSource="Header"
                                              Grid.Column="1"
                                              TextBlock.Foreground="White"
                                              TextBlock.FontFamily="Fonts/#Roboto Light"
                                              TextBlock.FontSize="10"
                                              HorizontalAlignment="Left"
                                              RecognizesAccessKey="True"
                                              Margin="4,0,4,0"
                                              VerticalAlignment="Center" />

                            <!--// PART_Popup //-->
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="true"
                                   Focusable="false"
                                   HorizontalOffset="0"
                                   IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Top"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   VerticalOffset="0">
                                <Border>
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left" 
                                                    VerticalAlignment="Top" />
                                            <!--<ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="true"
                                                            KeyboardNavigation.TabNavigation="Cycle" />-->
                                            <Border MinWidth="50" MinHeight="18">
                                                <ListBox ItemsSource="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"
                                                         ItemContainerStyle="{StaticResource SuggestionItem}">
                                                    <ListBox.Style>
                                                        <Style TargetType="ListBox">
                                                            <Setter Property="SnapsToDevicePixels" Value="true"/>
                                                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ListBox">
                                                                        <Border Name="Border" Background="{TemplateBinding Background}"
                                                                                BorderBrush="Transparent" BorderThickness="0">
                                                                            <ScrollViewer Margin="0" Focusable="false">
                                                                                <StackPanel IsItemsHost="true"/>
                                                                            </ScrollViewer>
                                                                        </Border>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ListBox.Style>
                                                </ListBox>
                                            </Border>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Popup>

                            <!--边框-->
                            <Border x:Name="outline" Grid.ColumnSpan="2"
                                    CornerRadius="2.5"
                                    BorderBrush="OrangeRed"
                                    BorderThickness="1"/>
                            
                            <!--边框亮色-->
                            <Border Grid.ColumnSpan="2"
                                    CornerRadius="2.5"
                                    BorderBrush="#00FFCE"
                                    BorderThickness="1"
                                    Visibility="{Binding LightOnOff,
                                                         Converter={StaticResource BooleanToVisibilityConverter},
                                                         RelativeSource={RelativeSource TemplatedParent}}"
                                    />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None" />
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                        Storyboard.TargetName="PART_Popup">
                                            <DiscreteBooleanKeyFrame KeyTime="0:0:0.2" Value="False"/>
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="outline"
                                                         Duration="0:0:0.1"
                                                         To="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                        Storyboard.TargetName="PART_Popup">
                                            <DiscreteBooleanKeyFrame  KeyTime="0:0:0.1" Value="True"/>
                                        </BooleanAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="outline"
                                                         Duration="0:0:0.1"
                                                         To="1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        

                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="outline" Property="Opacity" Value="1"/>
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="outline" Property="Opacity" Value="0"/>
                            <Setter TargetName="PART_Popup" Property="IsOpen" Value="False"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>