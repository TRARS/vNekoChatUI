<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:vNekoChatUI.CustomControlEx.TextBoxEx">


    <local:cTextBox_converter_bordercontentheader_visibility x:Key="cTextBox_converter_bordercontentheader_visibility"/>
    <local:cTextBox_converter_placeholder_visibility x:Key="cTextBox_converter_placeholder_visibility"/>

    <Style TargetType="{x:Type local:cTextBox}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="SelectionTextBrush" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            
                            <!--头部-->
                            <Grid Grid.Row="0"
                                  Visibility="{Binding BorderContentHeader, 
                                                       RelativeSource={RelativeSource TemplatedParent},
                                                       Converter={StaticResource cTextBox_converter_bordercontentheader_visibility}}"
                                  HorizontalAlignment="Left"
                                  Margin="0,1,0,-4"
                                  IsHitTestVisible="False">
                                
                                <Border Background="{Binding BorderBackground, RelativeSource={RelativeSource TemplatedParent}}"
                                        CornerRadius="2.5,2.5,0,0" 
                                        BorderThickness="1" 
                                        BorderBrush="Transparent">
                                </Border>
                                <TextBlock Text="{Binding BorderContentHeader, RelativeSource={RelativeSource TemplatedParent}}"
                                           Foreground="{Binding BorderContentHeaderColor, RelativeSource={RelativeSource TemplatedParent}}"
                                           Margin="4,0,4,4"/>
                            </Grid>
                            
                            <!--输入框本体-->
                            <Grid Grid.Row="1"
                                  HorizontalAlignment="Stretch"
                                  Margin="0,0,0,0">
                                <Border x:Name="border"
                                        Background="{Binding BorderBackground, RelativeSource={RelativeSource TemplatedParent}}"
                                        CornerRadius="{Binding BorderCornerRadius, RelativeSource={RelativeSource TemplatedParent}}" 
                                        BorderThickness="1" 
                                        BorderBrush="Transparent"
                                        IsHitTestVisible="False">
                                </Border>

                                <ScrollViewer x:Name="PART_ContentHost" 
                                              MaxHeight="{Binding BorderContentMaxHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                              Focusable="false" 
                                              HorizontalScrollBarVisibility="Disabled" 
                                              VerticalScrollBarVisibility="Visible"
                                              VerticalAlignment="Center" 
                                              Margin="{Binding BorderContentMargin, RelativeSource={RelativeSource TemplatedParent}}" >
                                </ScrollViewer>

                                <TextBlock Text="{Binding Placeholder, RelativeSource={RelativeSource TemplatedParent}}" 
                                           Foreground="{Binding PlaceholderColor, RelativeSource={RelativeSource TemplatedParent}}"
                                           VerticalAlignment="Center"
                                           IsHitTestVisible="False"
                                           Margin="8,0,0,0">
                                    <TextBlock.Visibility>
                                        <MultiBinding Converter="{StaticResource cTextBox_converter_placeholder_visibility}">
                                            <Binding Path="Text" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="PlaceholderOnOff" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </TextBlock.Visibility>
                                </TextBlock>
                            </Grid>
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="lightGray" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" Value="white" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>