<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:vNekoChatUI.A.CustomControlEx.ConfigButtonEx" 
                    xmlns:contextmenuex="clr-namespace:vNekoChatUI.A.CustomControlEx.ContextMenuEx" 
                    xmlns:textboxex="clr-namespace:vNekoChatUI.A.CustomControlEx.TextBoxEx" 
                    xmlns:emptybuttonex="clr-namespace:vNekoChatUI.A.CustomControlEx.EmptyButtonEx"
                    xmlns:gridex="clr-namespace:vNekoChatUI.A.CustomControlEx.GridEx" 
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors" 
                    xmlns:togglebuttonex="clr-namespace:vNekoChatUI.A.CustomControlEx.ToggleButtonEx">

    <local:cConfigButton_converter_border_clip x:Key="cConfigButton_converter_border_clip"/>
    <local:cConfigButton_converter_border_mask_margin x:Key="cConfigButton_converter_border_mask_margin"/>

    <Style TargetType="ListViewItem" x:Key="keyItem" >
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!--<TextBlock Grid.Column="0"
                                   Text="—"
                                   Foreground="#8EA9A9A9"
                                   VerticalAlignment="Center"
                                   Margin="2,0,3,0"/>-->

                        <togglebuttonex:cToggleButton IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                                      VerticalAlignment="Center"/>

                        <textboxex:cTextBox x:Name="textbox"
                                            Grid.Column="1"
                                            MinWidth="60" MinHeight="22"
                                            MaxWidth="180"
                                            HorizontalAlignment="Stretch"
                                            Text="{Binding Value, Mode=TwoWay}"
                                            Placeholder ="enter your key here"
                                            PlaceholderColor ="#8E8EA0"
                                            PlaceholderOnOff="True"
                                            BorderBackground="#404143"
                                            TextWrapping="NoWrap"
                                            AcceptsReturn="False"
                                            BorderThickness="0"
                                            CaretBrush="OrangeRed" />

                        <!--<TextBlock Grid.Column="1"
                                   IsHitTestVisible="False"
                                   Text="enter your key here"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Left"
                                   Margin="10,0,0,0"
                                   Foreground="#8E8EA0">

                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Text,ElementName=textbox}" Value="">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>-->
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:cConfigButton}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cConfigButton}">
                    <Border x:Name="border"
                            Clip="{DynamicResource border_clip_key}">
                        <Border.Resources>
                            <!--直降将RectangleGeometry赋给Clip，能用但会报错，故绕个弯-->
                            <RectangleGeometry x:Key="border_clip_key" RadiusX="4.5" RadiusY="4.5">
                                <RectangleGeometry.Rect>
                                    <MultiBinding Converter="{StaticResource cConfigButton_converter_border_clip}">
                                        <Binding Path="ActualWidth" ElementName="border" />
                                        <Binding Path="ActualHeight" ElementName="border"/>
                                        <Binding Path="BorderThickness" ElementName="border"/>
                                    </MultiBinding>
                                </RectangleGeometry.Rect>
                            </RectangleGeometry>
                        </Border.Resources>
                        <Border.Background>
                            <SolidColorBrush Color="{Binding BorderMouseOverColor,RelativeSource={RelativeSource TemplatedParent}}"
                                             Opacity="0.0"/>
                        </Border.Background>

                        <gridex:cGrid x:Name="grid"
                                      ParentModel="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}">
                            <Border Opacity="{Binding BorderBackgroundOpacity,RelativeSource={RelativeSource TemplatedParent}}">
                                <Border x:Name="border_mask_color" Opacity="0.35" Background="Black" 
                                    Margin="{Binding BorderThickness, 
                                                     ElementName=border,
                                                     Converter={StaticResource cConfigButton_converter_border_mask_margin}}"/>
                            </Border>
                            <Border>
                                <Path x:Name="border_path"
                                      Data="{Binding BorderPathData,RelativeSource={RelativeSource TemplatedParent}}"
                                      Fill="{Binding BorderPathColor,RelativeSource={RelativeSource TemplatedParent}}" 
                                      IsHitTestVisible="False" 
                                      Stretch="Uniform"
                                      Margin="4"/>
                                <!--<ContentPresenter Content="{TemplateBinding Content}"
                                              Margin="4"/>-->
                            </Border>

                            <!--设置按钮右键菜，显示位置在宿主Grid上设置-->
                            <Grid.ContextMenu>
                                <contextmenuex:cContextMenu Opacity="1"
                                                            IsOpen="{Binding ContextMenuIsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                                            >
                                    <Border Background="#202123"
                                            BorderThickness="1"
                                            BorderBrush="OrangeRed"
                                            CornerRadius="4.5">
                                        <StackPanel Margin="2,4,2,2">
                                            <!--ChatGptApiKeys-->
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0"
                                                           VerticalAlignment="Center"
                                                           Text="ChatGptApiKeys"
                                                           Foreground="White"
                                                           Margin="5,0,5,0"/>
                                                <emptybuttonex:cEmptyButton Grid.Column="1"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Center"
                                                                            Command="{Binding AddChatGptApiKeyCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                            Width="16" Height="16"
                                                                            BorderMouseOverColor="DarkGray"
                                                                            BorderPathData="M42.666667 512c0 259.2 210.133333 469.333333 469.333333 469.333333s469.333333-210.133333 469.333333-469.333333S771.2 42.666667 512 42.666667 42.666667 252.8 42.666667 512z m469.333333-384a384 384 0 1 1 0 768 384 384 0 0 1 0-768z m-256 384a42.666667 42.666667 0 0 0 42.666667 42.666667h170.666666v170.666666a42.666667 42.666667 0 1 0 85.333334 0v-170.666666h170.666666a42.666667 42.666667 0 1 0 0-85.333334h-170.666666V298.666667a42.666667 42.666667 0 1 0-85.333334 0v170.666666H298.666667a42.666667 42.666667 0 0 0-42.666667 42.666667z"
                                                                            BorderPathMargin="1"
                                                                            Margin="0,0,0,0"/>

                                                <Border Grid.Row="1" Grid.ColumnSpan="2">
                                                    <ListView ItemsSource="{Binding ChatGptApiKeys,RelativeSource={RelativeSource TemplatedParent}}"
                                                              Background="Transparent" 
                                                              BorderThickness="0"
                                                              Margin="1"  
                                                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                              VirtualizingPanel.ScrollUnit="Pixel"
                                                              ItemContainerStyle="{StaticResource keyItem}"
                                                              >
                                                    </ListView>
                                                </Border>
                                            </Grid>

                                            <!--BingGptApiKeys-->
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0"
                                                           VerticalAlignment="Center"
                                                           Text="BingGptCookies"
                                                           Foreground="White"
                                                           Margin="5,0,5,0"/>
                                                <emptybuttonex:cEmptyButton Grid.Column="1"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Center"
                                                                            Command="{Binding AddBingGptCookieCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                            Width="16" Height="16"
                                                                            BorderMouseOverColor="DarkGray"
                                                                            BorderPathData="M42.666667 512c0 259.2 210.133333 469.333333 469.333333 469.333333s469.333333-210.133333 469.333333-469.333333S771.2 42.666667 512 42.666667 42.666667 252.8 42.666667 512z m469.333333-384a384 384 0 1 1 0 768 384 384 0 0 1 0-768z m-256 384a42.666667 42.666667 0 0 0 42.666667 42.666667h170.666666v170.666666a42.666667 42.666667 0 1 0 85.333334 0v-170.666666h170.666666a42.666667 42.666667 0 1 0 0-85.333334h-170.666666V298.666667a42.666667 42.666667 0 1 0-85.333334 0v170.666666H298.666667a42.666667 42.666667 0 0 0-42.666667 42.666667z"
                                                                            BorderPathMargin="1"
                                                                            Margin="0,0,0,0"/>

                                                <Border Grid.Row="1" Grid.ColumnSpan="2">
                                                    <ListView ItemsSource="{Binding BingGptCookies,RelativeSource={RelativeSource TemplatedParent}}"
                                                                          Background="Transparent" 
                                                                          BorderThickness="0"
                                                                          Margin="1"  
                                                                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                                          VirtualizingPanel.ScrollUnit="Pixel"
                                                                          ItemContainerStyle="{StaticResource keyItem}"
                                                                          >
                                                    </ListView>
                                                </Border>
                                            </Grid>

                                            <!--GeminiApiKeys-->
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0"
                                                           VerticalAlignment="Center"
                                                           Text="GeminiApiKeys"
                                                           Foreground="White"
                                                           Margin="5,0,5,0"/>
                                                <emptybuttonex:cEmptyButton Grid.Column="1"
                                                                            HorizontalAlignment="Left"
                                                                            VerticalAlignment="Center"
                                                                            Command="{Binding AddGeminiApiKeyCommand, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                                            Width="16" Height="16"
                                                                            BorderMouseOverColor="DarkGray"
                                                                            BorderPathData="M42.666667 512c0 259.2 210.133333 469.333333 469.333333 469.333333s469.333333-210.133333 469.333333-469.333333S771.2 42.666667 512 42.666667 42.666667 252.8 42.666667 512z m469.333333-384a384 384 0 1 1 0 768 384 384 0 0 1 0-768z m-256 384a42.666667 42.666667 0 0 0 42.666667 42.666667h170.666666v170.666666a42.666667 42.666667 0 1 0 85.333334 0v-170.666666h170.666666a42.666667 42.666667 0 1 0 0-85.333334h-170.666666V298.666667a42.666667 42.666667 0 1 0-85.333334 0v170.666666H298.666667a42.666667 42.666667 0 0 0-42.666667 42.666667z"
                                                                            BorderPathMargin="1"
                                                                            Margin="0,0,0,0"/>

                                                <Border Grid.Row="1" Grid.ColumnSpan="2">
                                                    <ListView ItemsSource="{Binding GeminiApiKeys,RelativeSource={RelativeSource TemplatedParent}}"
                                                              Background="Transparent" 
                                                              BorderThickness="0"
                                                              Margin="1"  
                                                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                              VirtualizingPanel.ScrollUnit="Pixel"
                                                              ItemContainerStyle="{StaticResource keyItem}"
                                                              >
                                                    </ListView>
                                                </Border>
                                            </Grid>
                                        </StackPanel>
                                    </Border>

                                    <!--ContextMenu关闭时保存设置-->
                                    <!--<i:Interaction.Triggers>
                                        <i:DataTrigger Binding="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}" Value="False">
                                            <i:InvokeCommandAction Command="{Binding PlacementTarget.ParentModel.SaveConfigToDesktopCommand, 
                                                                                             RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"
                                                                           />
                                        </i:DataTrigger>
                                    </i:Interaction.Triggers>-->
                                </contextmenuex:cContextMenu>
                            </Grid.ContextMenu>
                        </gridex:cGrid>

                        <!--ContextMenu关闭时保存设置，写在这里比较方便-->
                        <i:Interaction.Triggers>
                            <i:DataTrigger Binding="{Binding ContextMenuIsOpen, 
                                                                     RelativeSource={RelativeSource TemplatedParent}}"
                                                   Value="False">
                                <i:InvokeCommandAction Command="{Binding DataContext.SaveConfigToDesktopCommand, 
                                                                                 RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}"/>
                            </i:DataTrigger>
                        </i:Interaction.Triggers>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsEnabled,RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </DataTrigger>

                        <!--经过-->
                        <DataTrigger Binding="{Binding IsMouseOver,RelativeSource={RelativeSource Self}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Name="borderStoryboard_MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="border" 
                                                         Storyboard.TargetProperty="Background.Opacity"
                                                         To="1.0"
                                                         Duration="0:0:0.0"/>
                                        <ColorAnimation Storyboard.TargetProperty="Fill.Color"
                                                        Storyboard.TargetName="border_path"
                                                        To="LightGray"
                                                        Duration="0:0:0.0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="borderStoryboard_MouseOver" />
                            </DataTrigger.ExitActions>
                        </DataTrigger>

                        <!--按下-->
                        <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     Storyboard.TargetName="border_mask_color"
                                                     To="0.45"
                                                     Duration="0:0:0.0"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     Storyboard.TargetName="border_path"
                                                     To="0.85"
                                                     Duration="0:0:0.0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--弹起-->
                        <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     Storyboard.TargetName="border_mask_color"
                                                     To="0.35"
                                                     Duration="0:0:0.0"/>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     Storyboard.TargetName="border_path"
                                                     To="1.0"
                                                     Duration="0:0:0.0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        
                        <!--右键菜单-->
                        <DataTrigger Binding="{Binding DisableContextMenu,RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="ContextMenu" Value="{x:Null}" TargetName="grid"/>
                        </DataTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

  
</ResourceDictionary>