<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:vNekoChatUI.A.CustomControlEx.ToggleButtonEx">

    <local:cToggleButton_converter_diameter2height x:Key="cToggleButton_converter_diameter2height"/>
    <local:cToggleButton_converter_diameter2width x:Key="cToggleButton_converter_diameter2width"/>
    <local:cToggleButton_converter_radius2cornerradius x:Key="cToggleButton_converter_radius2cornerradius"/>
    <local:cToggleButton_converter_transformXcalculator x:Key="cToggleButton_converter_transformXcalculator"/>
    <local:cToggleButton_converter_visibility2minwidth x:Key="cToggleButton_converter_visibility2minwidth"/>
    <local:cToggleButton_converter_diameterDiet x:Key="cToggleButton_converter_diameterDiet"/>

    <VisualBrush x:Key="StripeTexture" TileMode="Tile" Viewport="0,0,3,3" ViewportUnits="Absolute" Viewbox="0,0,15,15" ViewboxUnits="Absolute">
        <VisualBrush.Visual>
            <Grid Background="Transparent" RenderTransformOrigin="0.5,0.5">
                <Path Data="M 0,15 L 15,0" Stroke="White" StrokeThickness="5" Opacity="1.0" />
                <Path Data="M 15,15 L 30,0" Stroke="White"  StrokeThickness="5" Opacity="1.0" />
                <Path Data="M 15,-15 L 0,0" Stroke="White"  StrokeThickness="5" Opacity="1.0" />
                <Path Data="M 0,30 L 15,15" Stroke="White"  StrokeThickness="5" Opacity="1.0" />
                <Path Data="M 0,0 L -15,15" Stroke="White"  StrokeThickness="5" Opacity="1.0" />
            </Grid>
        </VisualBrush.Visual>
    </VisualBrush>

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type local:cToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cToggleButton}">
                    <Border Background="Transparent"
                            Margin="-5,0,-5,0">

                        <Border Padding="5,0,5,0" Background="{TemplateBinding BackgroundColor}">
                            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{TemplateBinding DotDiameter, Converter={StaticResource cToggleButton_converter_diameter2width}}"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*" MinWidth="{TemplateBinding GuideLineVisibility, Converter={StaticResource cToggleButton_converter_visibility2minwidth}}"/>
                                </Grid.ColumnDefinitions>

                                <!--Left 滑块本体-->
                                <Grid x:Name="Left" Grid.Column="0">
                                    <Grid.Height>
                                        <MultiBinding Converter="{StaticResource cToggleButton_converter_diameter2height}">
                                            <Binding Path="BorderThickness" ElementName="Slider"/>
                                            <Binding Path="DotDiameter" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </Grid.Height>
                                    <Border x:Name="Slider" 
                                            BorderThickness="{TemplateBinding DotBorderThickness}" 
                                            BorderBrush="#80A0A0A0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop x:Name="IgnoreWarning" 
                                                              Offset="0.0" Color="{Binding SliderBackgroundColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <GradientStop Offset="{Binding SliderSeparatorOffset, RelativeSource={RelativeSource TemplatedParent}}" Color="{Binding SliderBackgroundColor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                <GradientStop Offset="{Binding SliderSeparatorOffset, RelativeSource={RelativeSource TemplatedParent}}" Color="Gray"/>
                                                <GradientStop Offset="1.0" Color="Gray"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource cToggleButton_converter_radius2cornerradius}">
                                                <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                                <Binding Path="DotCornerRadius" RelativeSource="{RelativeSource TemplatedParent}"/>
                                            </MultiBinding>
                                        </Border.CornerRadius>

                                        <Border Background="White" HorizontalAlignment="Left" VerticalAlignment="Center"
                                                Height="{Binding Width, RelativeSource={RelativeSource Self}}"
                                                CornerRadius="{TemplateBinding DotCornerRadius}">
                                            <Border.Width>
                                                <MultiBinding Converter="{StaticResource cToggleButton_converter_diameterDiet}">
                                                    <Binding Path="DotDiameter" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                    <Binding Path="DotDiet" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                </MultiBinding>
                                            </Border.Width>
                                            <Border.RenderTransform>
                                                <TransformGroup>
                                                    <TranslateTransform Y="0">
                                                        <TranslateTransform.X>
                                                            <MultiBinding Converter="{StaticResource cToggleButton_converter_transformXcalculator}">
                                                                <Binding Path="DotTransformX" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                <Binding Path="DotDiet" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                            </MultiBinding>
                                                        </TranslateTransform.X>
                                                    </TranslateTransform>
                                                </TransformGroup>
                                            </Border.RenderTransform>
                                        </Border>
                                    </Border>
                                </Grid>

                                <!--Right 注释-->
                                <Grid x:Name="Right" Grid.Column="1" >
                                    <TextBlock x:Name="TextBlock" Text="{TemplateBinding Text}" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Margin="4,0,0,0"/>
                                </Grid>

                                <!--辅助线-->
                                <Grid x:Name="GuideLine" Grid.Column="2" Background="Transparent" Opacity="0" 
                                      HorizontalAlignment="Stretch" 
                                      VerticalAlignment="Center"
                                      OpacityMask="{StaticResource StripeTexture}"
                                      Visibility="{TemplateBinding GuideLineVisibility}"
                                      Margin="2,1,0,0"
                                      IsHitTestVisible="False">
                                    <Border HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            Background="{TemplateBinding GuideLineColor}"
                                            CornerRadius="1"
                                            Height="2">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                <GradientStop Offset="0" Color="#AC000000"/>
                                                <GradientStop Offset="1" Color="#11000000" />
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                </Grid>

                                <!--Red Line 删除线-->
                                <Border x:Name="StrikeLine" Grid.ColumnSpan="2" VerticalAlignment="Center" IsHitTestVisible="False"
                                        CornerRadius="1"
                                        Background="LawnGreen" 
                                        Opacity="0" 
                                        Width="{TemplateBinding Width}" Height="2"
                                        Margin="-3,0,-3,0"/>
                            </Grid>

                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Enable" Value="False">
                            <Trigger.Setters>
                                <Setter Property="Opacity" Value="0.25" TargetName="Left"/>
                                <Setter Property="Opacity" Value="0.35" TargetName="Right"/>
                                <Setter Property="Opacity" Value="0.45" TargetName="StrikeLine"/>
                                <Setter Property="IsHitTestVisible" Value="False"/>
                            </Trigger.Setters>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="GuideLine" Property="Opacity" Value="1"/>
                            <Setter TargetName="Slider" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="Cyan" ShadowDepth="0" BlurRadius="3"/>
                                </Setter.Value>
                            </Setter>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IsMouseOverAnm">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Slider" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:00" Value="GreenYellow"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:00" Value="Cyan"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsMouseOverAnm"/>
                            </Trigger.ExitActions>
                        </Trigger>

                        <DataTrigger Binding="{Binding DisableSliderButton, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                            <Setter TargetName="Left" Property="Opacity" Value="0.25"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Visibility, RelativeSource={RelativeSource Self}}" Value="Collapsed">
                            <Setter Property="IsHitTestVisible" Value="False"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>