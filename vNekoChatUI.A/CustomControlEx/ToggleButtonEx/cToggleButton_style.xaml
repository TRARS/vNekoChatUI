<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:vNekoChatUI.A.CustomControlEx.ToggleButtonEx">
    <Style  BasedOn="{StaticResource {x:Type ToggleButton}}" TargetType="{x:Type local:cToggleButton}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:cToggleButton}">
                    <Border Background="#01000000">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <!--<Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Slider" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:00" Value="Transparent"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Slider" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:00" Value="GreenYellow"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:00" Value="Aqua"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Slider" Storyboard.TargetProperty="(BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:00" Value="GreenYellow"/>
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="TextBlock" Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:00" Value="Aqua"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Dot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <EasingThicknessKeyFrame KeyTime="00:00:00:0.1" Value="11,0,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Back" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:0.1" Value="#FFC62626"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="Dot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                                            <EasingThicknessKeyFrame KeyTime="00:00:00:0.1" Value="0,0,0,0"/>
                                        </ThicknessAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Back" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="00:00:00:0.1" Value="#FFA0A0A0"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="23"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!--Left-->
                            <Grid x:Name="Left" Grid.Column="0" >
                                <Border x:Name="Slider" BorderThickness="1" BorderBrush="Transparent" CornerRadius="2.5" >
                                    <Grid>
                                        <Rectangle x:Name="Back" Fill="#FFA0A0A0" 
                                               RadiusY="{Binding RadiusX, RelativeSource={RelativeSource Self}}" 
                                               RadiusX="{TemplateBinding Radius}"/>
                                        <Rectangle x:Name="Dot" Fill="White"  HorizontalAlignment="Left" VerticalAlignment="Center"
                                               Width="{TemplateBinding Diameter}" 
                                               Height="{TemplateBinding Diameter}" 
                                               RadiusX="{TemplateBinding Radius}"
                                               RadiusY="{TemplateBinding Radius}"  />
                                    </Grid>
                                </Border>
                            </Grid>

                            <!--Right-->
                            <Grid x:Name="Right" Grid.Column="1" >
                                <!--FontSize太大以致于无法显示下划线-->
                                <TextBlock x:Name="TextBlock" Text="{TemplateBinding Text}" Foreground="White" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Margin="4,0,0,0"/>
                            </Grid>

                            <!--Red Line-->
                            <Path x:Name="StrikeLine" Grid.ColumnSpan="2" Data="M0,0.5 1,0.5" Fill="#FFF4F4F5" Stretch="Fill" Stroke="LawnGreen" VerticalAlignment="Center" StrokeThickness="2"
                              Opacity="0" Width="{TemplateBinding Width}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Enable" Value="False">
                            <Trigger.Setters>
                                <Setter Property="Opacity" Value="0.65" TargetName="Left"/>
                                <Setter Property="Opacity" Value="0.75" TargetName="Right"/>
                                <Setter Property="Opacity" Value="1" TargetName="StrikeLine"/>
                                <Setter Property="IsHitTestVisible" Value="False"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>